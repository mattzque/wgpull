[lighthouse]
# key to authenticate nodes against the lighthouse
lighthouse_key = "change_me"

# key to authenticate lighthouse against the nodes
node_key = "change_me"

# HTTPS server port
port = 2001

# HTTPS server binds to this host
bindhost = "0.0.0.0"

# lighthouse will orchestrate key rotation across the
# entire network using this interval (1 week in the example)
key_rotation_interval_seconds = 604800

# lighthouse will rotate keys at this time of day (between 2:00
#   and 3:00 at night in the example)
key_rotation_tod = [2, 3]

# lighthouse will remove nodes from the network that have not
#   been seen for this amount of time (5 minutes in the example)
node_timeout_seconds = 300

# lighthouse stores its current state in this file and restores
#   it on startup, this way the service can be restarted without
#   losing the network state
state_file = "wgpull_lighthouse.state"

[node]
lighthouse_host = "10.11.0.3"
lighthouse_port = 2001
lighthouse_ssl = false
# path prefix for the lighthouse api (e.g. <prefix>/api/v1/pull)
lighthouse_path_prefix = ""
lighthouse_key = "change_me"
node_key = "change_me"
# time inbetween lighthouse pulls
pull_interval = 30
# time inbetween pushing metrics to lighthouse (set to 0 to disable)
metrics_interval = 14
state_file = "wgpull_node.state"

[wireguard]
# which backend to use to configure the local wireguard interface (uci / systemd)
backend = "systemd"
address = "10.140.0.10/24"
# public ip or hostname that must be reachable by all other peers (set to
#   "discover" to use the public ip of the node)
endpoint = "10.11.0.3"
# the udp port used by wireguard
listen_port = 52720
# keepalive setting for wireguard
persistent_keepalive = 15
# ip ranges to expose through wireguard
allowed_ips = [
  "10.140.0.10/32",
  "10.10.0.0/16",
]
# add routes for allowed ips
route_allowed_ips = true

[systemd]
# the interface name to use
interface = "wg0"
# the path to the systemd-networkd configuration directory to place the wg0 interface files in
path = "/etc/systemd/network"
reload_networkd = true
delete_interface_before_reload = true

[uci]
interface = "wg0"
